classdef OrientationExperiment < Experiments.Experiment
    methods (Access = public)
        function this = OrientationExperiment ( ...
                postfix, ...
                exType, ...
                exSubject, ...
                exResearcherFN, ...
                exResearcherLN, ...
                startDate ...
        )
            this@Experiments.Experiment( ...
                                    postfix, ...
                                    exType, ...
                                    exSubject, ...
                                    exResearcherFN, ...
                                    exResearcherLN, ...
                                    startDate ...
            );
        end

        function extract_experiment_data (this, exp_index)
            this.extract_experiment_el_data(exp_index);
            this.extract_experiment_br_data();
            % this.plot_spikes_during_trials();
            orientations = find_experiment_orientations (this);
            Experiments.Plot.raster_plot_and_psth_of_spikes(orientations, this.trials, 'size', -1000, 2000, 10000*[-0.1 -0.05 0 0.02 0.05 0.1 0.15 0.2]);
        end

        function extract_experiment_el_data (this, exp_index)
            extract_experiment_el_data@Experiments.Experiment(this, exp_index);
        end

        function extract_experiment_br_data (this)
            extract_experiment_br_data@Experiments.Experiment(this);
        end

        function convert_properties_to_struct (this)
            convert_properties_to_struct@AnalysisData.Data(this);
        end
    end

    methods (Access = protected)

        function orientations = find_experiment_orientations (this)
            orientations_index = Utils.Util.find_last(this.Properties.info, ...
                                                      'stimulusSizes' ...
            );
            orientations_str = this.Properties.info{orientations_index};
            orientations = eval(orientations_str(strfind(orientations_str, ':')+2:end));
        end

        function [start_time_eyelink,eye_time_samples] = ...
                    calibrate_times(this, events_, data_eye)
            [start_time_eyelink, eye_time_samples] = ...
                calibrate_times@Experiments.Experiment(this, events_, data_eye) ...
            ;
        end

        function set_experiment_properties (this, events_, trials_start_indices)
            set_experiment_properties@Experiments.Experiment( ...
                                                        this, ...
                                                        events_, ...
                                                        trials_start_indices ...
            );
        end

        function filter_good_trials (this)
            filter_good_trials@Experiments.Experiment(this);
        end
    end

end
