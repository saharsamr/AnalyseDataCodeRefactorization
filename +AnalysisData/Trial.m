classdef Trial
    properties (Access = private)
        ID
        events
        trialNumber = []
        startTime
        endTime
        bar
        changed = []
        states
        Error
        rewardValue
        isGood2 % TODO: Ask to find a better name
        isGood1
        clueIndex = []
        changeIndex = []
        shouldKeep = []
        goodAmount
        eye
        reactionTime
        TTW
        stateTiming
    end

    methods (Access = public)
        function extract_trial_data ( ...
                                this, ...
                                trial_index, ...
                                experiment_events, ...
                                trials_start_indices, ...
                                eye_time_samples, ...
                                data_eye ...
                            )
            this.set_id(trial_index, trials_start_indices, experiment_events);
            this.set_trial_events(experiment_events, trial_index, trial_start_indices);
            this.set_trial_number();
            this.set_times();
            bar_index = this.set_bar_info(); % TODO: maybe it needs name improvment.
            changed_index = this.set_changed_flag();
            TTW_indices = this.set_TTWs();
            kept_bar_index = find(cellfun(@(x) ~isempty(x), ...
                                        strfind(this.events.info, 'keptBar:')) ...
                             );
            trial_ID_index = find(cellfun(@(x) ~isempty(x), ...
                                        strfind(this.events.info, 'TRIALID')) ...
                             );
            this.set_trial_states( ...
                                   bar_index, ...
                                   changed_index, ...
                                   TTW_indices, ...
                                   kept_bar_index, ...
                                   trial_ID_index ...
            );
            this.set_errors_and_reward_value();
            this.set_is_goods(); % TODO: not a proper name at all!
            this.set_cue_index(trial_index);
            this.set_change_index(trial_index);
            this.set_should_keep_index(trial_index);
            this.set_good_amount_update_is_goods();
            this.eye = AnalysisData.Eye(this, data_eye);
        end
    end

    methods (Access = private)
        function set_id (this, trial_index, trials_start_indices, experiment_events)
            id_str = experiment_events.info{trials_start_indices(trial_index)};
            this.ID = str2double(id_str(strfind(id_str, ' ')+1:end));
        end

        function set_trial_events ( ...
                                    this, ...
                                    experiment_events, ...
                                    trial_index, ...
                                    trial_start_indices ...
                                  )
            trial_start_index = trials_start_indices(trial_index);
            end_of_trial_index;
            if trial_index ~= numel(trials_start_indices)
                end_of_trial_index = trials_start_indices(trial_index+1)-1;
            else
                end_of_trial_index = numel(trial_start_indices);
            end
            this.events = AnalysisData.Event( ...
                            experiment_events.info(trial_start_index:end_of_trial_index), ...
                            experiment_events.time(trial_start_index:end_of_trial_index) ...
                         );
        end

        function set_trial_number (this)
            trial_num_index = find(cellfun(@(x) ~isempty(x), ...
                                   strfind(this.events.info, 'trialNumber:')) ...
                                  );
            if ~isempty(trial_num_index)
                trial_num_str = this.events.info{trial_num_index};
                this.trialNumber = str2double(trial_num_str(strfind(trial_num_str, ' ')+1:end));
            end
        end

        function set_times (this)
            this.startTime = this.events.time(1);
            this.startTime = this.events.time(end);
        end

        function bar_index = set_bar_info (this)
            bar_index = find(cellfun(@(x) ~isempty(x), ...
                                strfind(this.events.info, 'bar:')) ...
                            );
            this.bar = AnalysisData.Bar( ...
                            this.events.info(bar_index), ...
                            this.events.time(bar_index) ...
                       );
            % this.bar = remakeBarSignal(this.bar, this.endTime, this.bar_sampling_frequency);
            % TODO: function above, and bar_sampling_frequency.
        end

        function changed_index = set_changed_flag (this)
            changed_index = find(cellfun(@(x) ~isempty(x), ...
                                 strfind(this.events.info, 'changed:')) ...
                                );
            if ~isempty(changed_index) % ------------- in dare chikar mikone?
                if ~isempty(strfind(this.events.info{changed_index(end)}, 'false'))
                    changed = 0;
                elseif  ~isempty(strfind(this.events.info{changed_index(end)}, 'true'))
                    changed = 1;
                end
                % this.changed = str2double(this.events.info{changed_index(1)}(end));
                this.changed = changed; % ------------- chera? hatta age varede ina nashe bug ham mikhore.
            end
        end

        function TTW_indices = set_TTWs (this)
            TTW_indices   = find(cellfun(@(x) ~isempty(x), ...
                                    strfind(this.events.info, 'TTW:')) ...
                                );
            for TTW_index = TTW_indices
                TTW_str = this.events.info{TTW_index};
                this.TTW.(TTW_str(1:strfind(TTW_str,':')-1)) = ...
                            str2double(TTW_str(strfind(TTW_str,':')+2:end)) ...
                ;
            end
        end

        function set_trial_states ( ...
                                    this, ...
                                    bar_index, ...
                                    changed_index, ...
                                    TTW_indices, ...
                                    kept_bar_index, ...
                                    trial_ID_index ...
                                  )
            unused_indices = union( ...
                                    union( ...
                                        union(...
                                            union(bar_index, changed_index), ...
                                        kept_bar_index), ...
                                    TTW_indices), ...
                                trial_ID_index
                            );
            this.states = AnalysisData.Event( ...
                        this.events.info(setdiff(1:numel(this.events.info), ...
                                            unused_indices)), ...
                        this.events.time(setdiff(1:numel(this.events.info), ...
                                            unused_indices)) ...
            );
        end

        function set_errors_and_reward_value (this)
            start_state_index  = find(cellfun(@(x) ~isempty(x), ...
                                      strfind(this.states.info, ...
                                            'barWait=>barWait_waiter') ...
                                      ), 1, 'last' ...
                                 );
            error_index  = find(cellfun(@(x) ~isempty(x), ...
                                strfind(this.states.info, '=>error'))
                           );

            reward_index = find(cellfun(@(x) ~isempty(x), strfind(this.states.info, 'reward:')));
            this.Error = (~isempty(error_index)) && (error_index > start_state_index);
            if this.Error
                this.rewardValue = -1;
            elseif isempty(reward_index)
                this.rewardValue = -2;
            else
                this.rewardValue = str2double( ...
                                        this.states.info{reward_index}( ...
                                                    strfind(this.states.info{reward_index}, ...
                                                    ':')+2:end)
                                        )/0.2
                                    ;
            end
        end

        function set_is_goods (this)
            keep_trig    = ~isempty(find(cellfun(@(x) ~isempty(x), ...
                                        strfind(this.states.info, ...
                                                'stimulus_waiter=>keepWait' ...
                                                ))) ...
                                    );
            release_trig    = ~isempty(find(cellfun(@(x) ~isempty(x), ...
                                        strfind(this.states.info, ...
                                                'stimulus_waiter=>releaseWait' ...
                                                ))) ...
                                    );
            this.isGood2  = keep_trig || release_trig; % ------------- in chie?
            this.isGood1  = 1.*~isempty(find( ...
                                        cellfun(@(x) ~isempty(x), ...
                                        strfind(this.states.info, ...
                                                'reward=>reward_waiter') ...
                                                )) ...
                                        );
            error_msg = find(cellfun(@(x) ~isempty(x),
                                    strfind(this.events.info,
                                            'ERROR MESSAGES')
                                    ));
            error_msg = find(cellfun(@(x) ~isempty(x),
                                    strfind(this.events.info,
                                            'ERROR COMMANDS')
                                    ));
            if ~isempty(error_msg) || ~isempty(error_com)
                this.isGood2 = 0;
                this.isGood1 = 0;
            end
        end

        function set_cue_index (this, trial_index)
            clueIndex = find(cellfun(@(x) ~isempty(x), ...
                            strfind(this.states.info, 'cueIndex:'))
                       );
           if ~isempty(clueIndex)
               clueIndex = clueIndex(end);
               this.clueIndex = str2double( ...
                                this.states.info{clueIndex}(strfind( ...
                                                    this.states.info{cueIndex}, ...
                                                    ':')+2:end) ...
                                );
           else
               warning(['no cueIndex found in trial ' ...
                        num2str(trial_index) ...
                        ' events! setting it to 1!'])
               clueIndex = 1;
               this.clueIndex = clueIndex;
           end
        end

        function set_change_index (this, trial_index)
            changeIndex = find(cellfun(@(x) ~isempty(x), ...
                            strfind(this.states.info, 'changeIndex:'))
                       );
            if ~isempty(changeIndex)
                changeIndex = changeIndex(end);
                this.changeIndex = str2double( ...
                                 this.states.info{changeIndex}(strfind( ...
                                                     this.states.info{changeIndex}, ...
                                                     ':')+2:end) ...
                                 );
            else
                warning(['no change_index found in trial ' ...
                         num2str(trial_index) ...
                         ' events! setting it to 1!'])
                changeIndex = 1;
                this.changeIndex = changeIndex;
            end
        end

        function set_should_keep_index (this, trial_index)
            shouldKeepIndex = find(cellfun(@(x) ~isempty(x), ...
                            strfind(this.states.info, 'shouldKeep:'))
                       );
            if ~isempty(shouldKeepIndex)
                if ~isempty(strfind( ...
                                    this.states.info{shouldKeepIndex(end)}, ...
                                    'false') ...
                    )
                    shouldKeepIndex = 0;
                elseif ~isempty(strfind( ...
                                    this.states.info{shouldKeepIndex(end)}, ...
                                    'true') ...
                    )
                    shouldKeepIndex = 1;
                end % this.shouldKeep = str2double(this.states.info{shouldKeepIndex}(strfind(this.states.info{shouldKeepIndex}, ':')+2:end));
                this.shouldKeep = shouldKeepIndex; % ------------- khob chera? :))
            elseif ~isempty(find( ...
                            cellfun(@(x) ~isempty(x), ...
                                    strfind( ...
                                            this.states.info, ...
                                            'stimulus_waiter=>keepWait' ...
                                            ) ...
                                    ) ...
                                )) ...
                    || ...
                    ~isempty(find( ...
                             cellfun(@(x) ~isempty(x), ...
                                     strfind( ...
                                             this.states.info, ...
                                             'stimulus_waiter=>releaseWait' ...
                                     ) ...
                             )) ...
                    )
                    if ~isempty(find( ...
                                cellfun(@(x) ~isempty(x), ...
                                    strfind( ...
                                            this.states.info, ...
                                            'stimulus_waiter=>keepWait' ...
                                    ) ...
                                )) ...
                        )
                        this.shouldKeep = 1;
                    elseif ~isempty(find(
                                    cellfun(@(x) ~isempty(x), ...
                                        strfind( ...
                                                this.states.info, ...
                                                'stimulus_waiter=>releaseWait' ...
                                        ) ...
                                    )) ...
                    )
                        this.shouldKeep = 0;
                    end
            else
                warning(['no shouldKeepIndex found in trial ' ...
                         num2str(trial_index) ...
                         ' events! setting it to 0!'])
                this.shouldKeep = 0;
            end
        end

        function set_good_amount_update_is_goods (this)
            this.goodAmount = 0;
            if this.shouldKeep == 1
                rewardAmountIndex = find( ...
                                    cellfun(@(x) ~isempty(x), ...
                                        strfind( ...
                                                Experiment.Properties.info, ...
                                                'keepRewardAmount:' ...
                                        ) ...
                                    ));
                this.goodAmount = str2double( ...
                                        Experiment.Properties.info{rewardAmountIndex} ...
                                        (strfind(Experiment.Properties.info{rewardAmountIndex},':')+2:end) ...
                                  );
            elseif this.shouldKeep == 0
                rewardAmountIndex = find( ...
                                    cellfun(@(x) ~isempty(x), ...
                                        strfind( ...
                                                Experiment.Properties.info, ...
                                                'releaseRewardAmount:' ...
                                        ) ...
                                    ));
                this.goodAmount = str2double( ...
                                        Experiment.Properties.info{rewardAmountIndex} ...
                                        (strfind(Experiment.Properties.info{rewardAmountIndex},':')+2:end) ...
                                  );
            end

            if this.goodAmount <= this.rewardValue % ------------- chikar dare mikone?
                this.isGood1 = 1;
            else
                this.isGood1 = 0;
            end
        end
    end

end
